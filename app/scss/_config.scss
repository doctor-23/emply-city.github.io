@use "mixins";

:root {
    --container: 1172px;
    --main-font: 'Lato', sans-serif;
    --raleway: 'Raleway', sans-serif;
    --font-size: 18px;
    --color-1: #3E9CDC;
    --color-2: #000000;
    --color-3: #2A2B30;
    --color-4: #6F6D7B;
    --color-5: rgba(255, 255, 255, 0.85);
    --color-7: #BBBBBB;
    --white: #FFF;
    --bg-color: #272733;
    --radius-1: 4px;
    --radius-2: 3px;

    @include mixins.laptop {
        --container: 100vw;
    }

    @include mixins.tablet {
        --container: 100vw;
    }

    @include mixins.mobile {
        --font-size: 14px;
    }
}

html {
    font-size: var(--font-size);
    color: var(--white);
    lang: ru;
    font-variant-numeric: lining-nums proportional-nums;
}

html, body {
    scrollbar-gutter: stable;
    background-color: var(--bg-color);
}

body {
    position: relative;
    max-width: 100vw !important;
    margin: 0;

    & * {
        font-family: var(--main-font);
        font-weight: 400;
        line-height: 1;
    }
}

main {
    position: relative;
    z-index: 3;
    min-height: 55vh;
    background-color: var(--bg-color);

    &.layer-up {
        z-index: 5;
    }
}

section {
    position: relative;
    z-index: 1;
}

h1, h2, h3, h4, h5, h6, p {
    margin: 0;
    padding: 0;
}

ul, ol, li {
    display: block;
    padding: 0;
    margin: 0;
}

strong, b {
    font-weight: bold;
}

* {
    box-sizing: border-box;

    &::before, &::after {
        box-sizing: border-box;
    }
}

a, a:hover, a:active, a:focus, button, input, button:hover, button:active, button:focus, input:focus, input:active {
    text-decoration: none;
    outline: none;
}

a {
    color: inherit;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
}

input[type='number'],
input[type="number"]:hover,
input[type="number"]:focus {
    appearance: none;
    -moz-appearance: textfield;
}

img, picture, figure {
    display: block;
    margin: 0;
}

.container {
    position: relative;
    max-width: var(--container);
    width: 100%;
    margin: 0 auto;

    @include mixins.laptop {
        padding: 0 20px;
    }
}

.validate {
    border-color: darkred !important;
}

.main-title {
    &, * {
        font-size: 48px;
        font-weight: bold;
        text-transform: uppercase;
        user-select: none;

        @include mixins.mobile {
            font-size: 34px;
        }
    }
}

.second-title {
    &, * {
        font-size: 36px;
        font-weight: 900;
        text-transform: uppercase;
        user-select: none;

        @include mixins.mobile {
            font-size: 34px;
        }
    }
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    text-transform: uppercase;
    outline: none !important;
    border-radius: var(--radius-1);
    cursor: pointer;
    transition: background-color .3s ease-in-out, color .3s ease-in-out;

    @include mixins.tablet {
        padding: 14px 0;
    }

    @include mixins.mobile {
        height: 34px;
        padding: 5.5px 0 7.5px;
    }

    &.load {
        position: relative;
        pointer-events: none;
        background: #D8D8D8 !important;

        &::after {
            animation-duration: .3s;
            animation-fill-mode: both;
            animation: rotateAnimation .3s linear infinite; /* Добавляем анимацию */
        }
    }

    &.sm {
        height: 43px;
        padding: 15px 0;
    }

    &.md {
        height: 48px;
        padding: 17.5px 0;
    }

    &.blue {
        color: var(--white);
        background-color: var(--color-1);
        border: 1px solid var(--white);

        &:hover, &:focus-visible {
            background-color: #286690;
        }
    }

    &.white {
        border: 1px solid var(--color-4);
        background-color: var(--white);

        &:hover, &:focus-visible {
            color: var(--white) !important;
            background-color: #939393;
        }
    }
}

.blue-text {
    color: var(--color-1) !important;
}

.desktop {
    @include mixins.tablet {
        display: none !important;
    }
}

.desktop-tablet {
    @include mixins.mobile {
        display: none !important;
    }
}

.tablet {
    display: none !important;

    @include mixins.tablet {
        display: block !important;
    }
}

.mobile {
    display: none !important;

    @include mixins.mobile {
        display: block !important;
    }
}

.form__row-checkboxes {
    display: flex;
    flex-direction: column;
    gap: 18px;
}

.form__col {
    position: relative;

    .msg {
        position: absolute;
        bottom: 0;
        left: 10px;
        display: none;
        width: max-content;
        font-size: 10px;
        color: red;
        letter-spacing: .1em;
        transform: translateY(100%);
    }
}

.form-input {
    width: 100%;
    height: 58px;
    padding: 17px 20px;
    font-size: var(--font-size);
    color: var(--white);
    background-color: transparent;
    border: 1px solid var(--white);
    border-radius: var(--radius-2);
    transition: border-color .3s ease-in-out;

    @include mixins.mobile {
        height: 50px;
        padding: 20px 14.5px;
    }

    &:hover, &:focus-visible {
        border-color: var(--color-4);
    }
}

.loading {
    &::before {
        content: '';
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 100;
        background: rgba(255, 255, 255, .6) url('../img/icons/spinner.svg') center / 100px no-repeat;
    }
}

.disabled {
    pointer-events: none;
    //opacity: .7;
    background: #D8D8D8 !important;
}

.hidden {
    display: none !important;
}

.form-label {
    position: relative;

    input, textarea {

        &::placeholder {
            color: transparent;
        }

        &.show-placeholder {
            &::placeholder {
                color: inherit;
            }
        }

        & ~ label {
            .red {
                color: red !important;
            }
        }

        //&:hover {
        //    & ~ label {
        //        color: #fff;
        //    }
        //}

        /* Срабатывает, если поле в фокусе */
        &:focus ~ label,
            /* Срабатывает, если поле активно (кликнуто) */
        &:active ~ label,
            /* Срабатывает, если поле не пустое */
        &.filled ~ label,
            /* Для required-полей: если введено корректное значение */
        &:valid ~ label {
            color: #fff;
            background-color: var(--color-3);
            transform: translateY(-70%);

            @include mixins.mobile {
                transform: translateY(-60%);
            }
        }

        /**
        если стили для таких блоков будут едины,
        то можно раскоментировать тут, если нет,
        то писать нужно для каждого блока отдельно,
        не раскоментируя этот код,
        потому что связка :not(:placeholder-shown) почему-то 2 раза не работает

    &:not(:placeholder-shown) {
        & ~ label {
            transform: translateY(-50%);
        }
    }

     /**/
    }

    .transform-label {
        position: absolute;
        top: 0;
        left: 10px;
        padding: 5px;
        color: var(--bg-color);
        outline: none;
        border-radius: 6px;
        background-color: transparent;
        transform: translateY(10px);
        pointer-events: none;
        transition: transform .3s ease-in-out, color .3s ease-in-out, background-color .3s ease-in-out;

        @include mixins.mobile {
            left: 11px;
            transform: translateY(13.5px);
        }

        &, & * {
            height: calc(var(--font-size) * 1.625);
            font-size: var(--font-size);
            line-height: 1;
            cursor: auto;

            @include mixins.mobile {
                height: 23px;
                font-size: 13px;
            }
        }
    }
}

.form-field {
    width: 100%;
    height: 48px;
    padding: 10px;
    font-size: var(--font-size);
    color: var(--bg-color);
    border-radius: var(--radius-2);
    border: 2px solid transparent;
    transition: border-color .3s ease-in-out;

    &:hover, &:focus-visible {
        border-color: var(--color-1);
    }
}
